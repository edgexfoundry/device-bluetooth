# Copyright 2017 Dell Inc. All rights reserved.
name: "SensorTag"
manufacturer: "Texas Instruments"
model: "CC2650"
labels: 
  - "ble"
  - "sensortag"
description: "TI SimpleLink SensorTag 2.0 with Bluetooth 4.0"

deviceResources:
      -   
        name: IRTemperature
        description: "Temperature from IR Sensor of remote object in Degrees Fahrenheit"
        attributes: 
            { uuid: "F000AA01-0451-4000-B000-000000000000" }
        properties: 
            value:
                { type: "Float", readWrite: "R", shift: "18", mask: "0xFFFC0000", scale: "0.05625", offset: "32", size: "4", LSB: "true" }
            units:
                { type: "String", readWrite: "R", defaultValue: "Degrees Fahrenheit" }
      -
        name: Temperature
        description: "Temperature from Temperature Sensor in Degrees Fahrenheit"
        attributes:
            { uuid: "F000AA01-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", shift: "2", mask: "0x0000FFFC", scale: "0.05625", offset: "32", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Degrees Fahrenheit"}
      -
        name: TemperatureEnable
        description: "Enable IR Sensor"
        attributes:
            { uuid: "F000AA02-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "RW", minimum: "0", maximum: "1", size: "2", LSB: "true", defaultValue: "0"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Enabled/Disabled"}
             
      -
        name: Humidity
        description: "Humidity Level in % Relative Humidity"
        attributes:
            { uuid: "F000AA21-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0xFFFF0000", shift: "16", scale: "0.00152587890625", size: "8", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "% Relative Humidity"}             
      -
        name: HumidityEnable
        description: "Enable Humidity Sensor"
        attributes:
            { uuid: "F000AA22-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "RW", minimum: "0", maximum: "1", size: "2", LSB: "true", defaultValue: "0"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Enabled/Disabled"}

      -
        name: Barometer
        description: "Barometric Pressure data in Pascals"
        attributes:
            { uuid: "F000AA41-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0xFFFFFF000000", shift: "24", word: "3", size: "12", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Pa"}             
      -
        name: BarometerEnable
        description: "Enable Barometer"
        attributes:
            { uuid: "F000AA42-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "RW", minimum: "0", maximum: "1", size: "2", LSB: "true", defaultValue: "0"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Enabled/Disabled"}            
      -
        name: GyroX
        description: "X Axis Gyroscope Reading in Degrees per second"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", scale: "0.00762939453125", mask: "0xFFFF00000000000000000000000000000000", shift: "128", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "deg/s"}   
      -
        name: GyroY
        description: "Y Axis Gyroscope Reading in Degrees per second"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", scale: "0.00762939453125", mask: "0x0000FFFF0000000000000000000000000000", shift: "112", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "deg/s"}  
      -
        name: GyroZ
        description: "Z Axis Gyroscope Reading in Degrees per second"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", scale: "0.00762939453125", mask: "0x00000000FFFF000000000000000000000000", shift: "96", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "deg/s"}             
      -
        name: AccelX
        description: "X Axis Accelerometer Reading in G-Forces"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", scale: "0.000244140625", mask: "0x00000000000000FFFF00000000000000000000", shift: "80", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "G"}   
      -
        name: AccelY
        description: "Y Axis Accelerometer Reading in G-Forces"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", scale: "0.000244140625", mask: "0x000000000000000000FFFF0000000000000000", shift: "64", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "G"}  
      -
        name: AccelZ
        description: "Z Axis Accelerometer Reading in G-Forces"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", scale: "0.000244140625", mask: "0x0000000000000000000000FFFF000000000000", shift: "48", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "G"}      
      -
        name: MagnetX
        description: "X Axis Magnetometer Reading in microTesla"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0x000000000000000000000000FFFF00000000", shift: "32", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "microTesla"}   
      -
        name: MagnetY
        description: "Y Axis Magnetometer Reading in microTesla"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0x0000000000000000000000000000FFFF0000", shift: "16", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "microTesla"}  
      -
        name: MagnetZ
        description: "Z Axis Magnetometer Reading in microTesla"
        attributes:
            { uuid: "F000AA81-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0x00000000000000000000000000000000FFFF", shift: "0", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "microTesla"}             
      -
        name: MovementEnable
        description: "Enable Accelerometer, Gyro, and Magnetometer"
        attributes:
            { uuid: "F000AA82-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "RW", minimum: "0000", maximum: "7F02", size: "4", LSB: "true", defaultValue: "0000"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Enabled/Disabled"}
             
      -
        name: Luxometer
        description: "Luxometer reading in lux"
        attributes:
            { uuid: "F000AA71-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0x0FFF", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: "lux * luxometerExponent"}      
      -
        name: LuxometerExponent
        description: "Luxometer reading Exponent"
        attributes:
            { uuid: "F000AA71-0451-4000-B000-000000000000" } 
        properties:
            value: 
             { type: "Float", readWrite: "R", mask: "0xF000", shift: "12", scale: ".01", base: "2", size: "4", LSB: "true"}
            units:
             { type: "String", readWrite: "R", defaultValue: ""}
      -
        name: LuxometerEnable
        description: "Enable Luxometer"
        attributes:
            { uuid: "F000AA72-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "RW", minimum: "0", maximum: "1", size: "2", LSB: "true", defaultValue: "0"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Enabled/Disabled"}
             
      -
        name: SelfTest
        description: "Power on self test, nominal state 0x7F"
        attributes:
            { uuid: "F000AA65-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "R", minimum: "0x00", maximum: "0x7F", size: "2", LSB: "true", defaultValue: "0x7F", assertion: "0x7F"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Power On Self Test"}
             
      -
        name: IOState
        description: "Set IO State Initialization"
        attributes:
            { uuid: "F000AA66-0451-4000-B000-000000000000" }
        properties:
            value: 
             { type: "Integer", readWrite: "RW", minimum: "0", maximum: "02", size: "2", LSB: "true", defaultValue: "0"}
            units:
             { type: "String", readWrite: "R", defaultValue: "Test/Remote/Local"}
             
resources:
  -
    name: Temperature
    get:
      - { index: "1", operation: "set", object: "TemperatureEnable", property: "value", parameter: "1" }
      - { index: "2", operation: "get", object: "Temperature", parameter: "Temperature", secondary: ["IRTemperature"], property: "value" }
      - { index: "3", operation: "set", object: "TemperatureEnable", property: "value", parameter: "0" }
            
  -
    name: Humidity
    get:
      - { index: "1", operation: "set", object: "HumidityEnable", property: "value", parameter: "1" }
      - { index: "2", operation: "get", object: "Humidity", parameter: "Humidity", property: "value" }
      - { index: "3", operation: "set", object: "HumidityEnable", property: "value", parameter: "0" }
  -
    name: Barometer
    get:
      - { index: "1", operation: "set", object: "BarometerEnable", property: "value", parameter: "1" }
      - { index: "2", operation: "get", object: "Barometer", parameter: "Barometer", property: "value" }
      - { index: "3", operation: "set", object: "BarometerEnable", property: "value", parameter: "0" }
  -  
    name: Movement
    get:
      - { index: "1", operation: "set", object: "MovementEnable", property: "value", parameter: "7F02" }
      - { index: "2", operation: "get", object: "AccelX", parameter: "AccelX", secondary: ["AccelY","AccelZ","GyroX","GyroY","GyroZ","MagnetX","MagnetY","MagnetZ"], property: "value" }
      - { index: "3", operation: "set", object: "MovementEnable", property: "value", parameter: "0" }
  -
    name: Luxometer
    get:
      - { index: "1", operation: "set", object: "LuxometerEnable", property: "value", parameter: "1" }
      - { index: "2", operation: "get", object: "Luxometer", secondary: ["LuxometerExponent"], property: "value", parameter: "Luxometer" }
      - { index: "3", operation: "set", object: "LuxometerEnable", property: "value", parameter: "0" }
  -
    name: RedLED
    get:
      - { index: "1", operation: "get", object: "RedLedState", parameter: "RedLedState", property: "value" }
    set:
      - { index: "1", operation: "set", object: "RedLedState", property: "value", parameter: "state" }
  -
    name: GreenLED
    get:
      - { index: "1", operation: "get", object: "GreenLedState", parameter: "GreenLedState", property: "value" }
    set:
      - { index: "1", operation: "set", object: "GreenLedState", property: "value", parameter: "state" }
  -
    name: Buzzer
    get:
      - { index: "1", operation: "get", object: "Buzzer", parameter: "Buzzer", property: "value" }
    set:
      - { index: "1", operation: "set", object: "Buzzer", property: "value", parameter: "state" }
      
  -
    name: Mvm
    get:
      - { index: "1", operation: "get", object: "AccelX", parameter: "AccelX", secondary: ["AccelY","AccelZ","GyroX","GyroY","GyroZ","MagnetX","MagnetY","MagnetZ"], property: "value" }
        
  -
    name: Query
    get:
      - { index: "1", operation: "get", object: "Temperature", parameter: "Temperature", secondary: ["IRTemperature"], property: "value" }
      - { index: "2", operation: "get", object: "Humidity", parameter: "Humidity", property: "value" }
      - { index: "3", operation: "get", object: "Barometer", parameter: "Barometer", property: "value" }
      - { index: "4", operation: "get", object: "AccelX", parameter: "AccelX", secondary: ["AccelY","AccelZ","GyroX","GyroY","GyroZ","MagnetX","MagnetY","MagnetZ"], property: "value" }
      - { index: "5", operation: "get", object: "Luxometer", parameter: "Luxometer", secondary: ["LuxometerExponent"], property: "value" }
      
  -
    name: Init
    get:
      - { index: "1", operation: "get", object: "TemperatureEnable", parameter: "TemperatureEnable", property: "value" }
    set:
      - { index: "1", operation: "set", object: "TemperatureEnable", property: "value", parameter: "TemperatureEnable" }
      - { index: "2", operation: "set", object: "HumidityEnable", property: "value", parameter: "TemperatureEnable" }
      - { index: "3", operation: "set", object: "BarometerEnable", property: "value", parameter: "TemperatureEnable" }
      - { index: "4", operation: "set", object: "MovementEnable", property: "value", parameter: "TemperatureEnable", mappings: { "1": "7F02" } }
      - { index: "5", operation: "set", object: "LuxometerEnable", property: "value", parameter: "TemperatureEnable" }
        
  -
    name: Status
    get:
      - { index: "1", operation: "get", object: "TemperatureEnable", parameter: "TemperatureEnable", property: "value" }
    set:
      - { index: "1", operation: "set", object: "TemperatureEnable", property: "value", parameter: "TemperatureEnable" }   
                   
commands: 

  - 
    name: Query
    get: 
        path: "/api/v1/device/{deviceId}/Query"
        responses: 
          - 
            code: "200"
            description: "Query all device sensors."
            expectedValues: ["AccelX","AccelY","AccelZ","GyroX","GyroY",
            "GyroZ","MagnetX","MagnetY","MagnetZ","Luxometer","LuxometerExponent",
            "Barometer","Humidity","Temperature","IRTemperature"]
          -
            code: "503"
            description: "service unavailable"
            expectedValues: []
  